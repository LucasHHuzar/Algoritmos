DROP DATABASE HotelSaintGermain;

-- Cria o banco de dados para o Hotel Saint Germain
CREATE DATABASE HotelSaintGermain;

-- Usa o banco de dados
USE HotelSaintGermain;

-- Tabela para informações dos clientes
CREATE TABLE Clientes (
    IDCliente INT PRIMARY KEY,
    NomeCliente VARCHAR(100) NOT NULL,
    Email VARCHAR(100),
    Telefone VARCHAR(15),
    DataNascimento DATE
);

-- Tabela para informações dos quartos
CREATE TABLE Quartos (
    IDQuarto INT PRIMARY KEY,
    TipoQuarto VARCHAR(50) NOT NULL,
    TarifaDiaria DECIMAL(10, 2) NOT NULL
);

-- Tabela para informações das reservas
CREATE TABLE Reservas (
    IDReserva INT PRIMARY KEY,
    IDCliente INT,
    IDQuarto INT,
    DataCheckIn DATE NOT NULL,
    DataCheckOut DATE NOT NULL,
    ValorTotal DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (IDCliente) REFERENCES Clientes(IDCliente),
    FOREIGN KEY (IDQuarto) REFERENCES Quartos(IDQuarto)
);

-- Tabela para informações de serviços adicionais
CREATE TABLE ServicosAdicionais (
    IDServico INT PRIMARY KEY,
    NomeServico VARCHAR(100) NOT NULL,
    TarifaServico DECIMAL(10, 2) NOT NULL
);

-- Tabela de associação entre reservas e serviços adicionais
CREATE TABLE ReservaServico (
    IDReserva INT,
    IDServico INT,
    Quantidade INT NOT NULL,
    FOREIGN KEY (IDReserva) REFERENCES Reservas(IDReserva),
    FOREIGN KEY (IDServico) REFERENCES ServicosAdicionais(IDServico)
);

-- Tabela para informações de funcionários
CREATE TABLE Funcionarios (
    IDFuncionario INT PRIMARY KEY,
    NomeFuncionario VARCHAR(100) NOT NULL,
    Cargo VARCHAR(50),
    DataContratacao DATE NOT NULL
);

-- Tabela para informações de check-in e check-out
CREATE TABLE CheckInCheckOut (
    IDReserva INT PRIMARY KEY,
    IDFuncionario INT,
    DataCheckIn DATE NOT NULL,
    DataCheckOut DATE,
    FOREIGN KEY (IDReserva) REFERENCES Reservas(IDReserva),
    FOREIGN KEY (IDFuncionario) REFERENCES Funcionarios(IDFuncionario)
);

-- Tabela para registro de pagamentos
CREATE TABLE Pagamentos (
    IDPagamento INT PRIMARY KEY,
    IDReserva INT,
    ValorPagamento DECIMAL(10, 2) NOT NULL,
    DataPagamento DATE NOT NULL,
    FOREIGN KEY (IDReserva) REFERENCES Reservas(IDReserva)
);

-- Inserir registros na tabela Clientes
INSERT INTO Clientes (IDCliente, NomeCliente, Email, Telefone, DataNascimento, DataCadastro)
VALUES
(1, 'João da Silva', 'joao@example.com', '(11) 1234-5678', '1980-05-15', '2023-10-01'),
(2, 'Maria Santos', 'maria@example.com', '(21) 9876-5432', '1990-02-20', '2023-10-02'),
(3, 'Pedro Ferreira', 'pedro@example.com', '(31) 5555-7777', '1975-08-10', '2023-10-03'),
(4, 'Ana Souza', 'ana@example.com', '(41) 9999-2222', '1988-04-25', '2023-10-04'),
(5, 'Lucas Pereira', 'lucas@example.com', '(51) 3333-4444', '1995-11-30', '2023-10-05');

-- Inserir registros na tabela Quartos
INSERT INTO Quartos (IDQuarto, TipoQuarto, TarifaDiaria)
VALUES
(101, 'Luxo', 200.00),
(102, 'Standard', 150.00),
(103, 'Suíte', 250.00),
(201, 'Standard', 150.00),
(202, 'Luxo', 200.00);

-- Inserir registros na tabela Reservas
INSERT INTO Reservas (IDReserva, IDCliente, IDQuarto, DataCheckIn, DataCheckOut, ValorTotal)
VALUES
(1, 1, 101, '2023-10-10', '2023-10-15', 1000.00),
(2, 2, 102, '2023-10-12', '2023-10-17', 750.00),
(3, 3, 103, '2023-10-15', '2023-10-20', 1250.00),
(4, 4, 201, '2023-10-18', '2023-10-23', 750.00),
(5, 5, 202, '2023-10-20', '2023-10-25', 1000.00);

-- Inserir registros na tabela ServicosAdicionais
INSERT INTO ServicosAdicionais (IDServico, NomeServico, TarifaServico)
VALUES
(1, 'Restaurante', 50.00),
(2, 'Lavanderia', 30.00),
(3, 'Estacionamento', 20.00),
(4, 'Wi-Fi', 10.00),
(5, 'Piscina', 40.00);

-- Inserir registros na tabela ReservaServico
INSERT INTO ReservaServico (IDReserva, IDServico, Quantidade)
VALUES
(1, 1, 2),
(2, 2, 1),
(3, 1, 3),
(4, 3, 1),
(5, 4, 2);

-- Listar, em ordem alfabética, o nome de todos os clientes e a data de entrada de suas reservas;
SELECT c.NomeCliente, r.DataCheckIn
FROM Clientes c
JOIN Reservas r ON c.IDCliente = r.IDCliente
ORDER BY c.NomeCliente;

-- Listar o nome e o cpf de todos os clientes brasileiros;
SELECT NomeCliente, CPF
FROM Clientes
WHERE Pais = 'Brasil';

-- Listar o nome e o passaporte de todos os clientes estrangeiros;
SELECT NomeCliente, Passaporte
FROM Clientes
WHERE Pais <> 'Brasil';

--  Listar o número da reserva e o nome do gerente de todas as reservas aprovadas;
SELECT r.IDReserva, f.NomeFuncionario AS NomeGerente
FROM Reservas r
JOIN Funcionarios f ON r.IDGerente = f.IDFuncionario
WHERE r.AprovacaoGerente IS NOT NULL;

-- Listar o número da reserva, a descrição e o valor dos pratos consumidos por todas as ocupações;
SELECT o.IDReserva, p.DescricaoPrato, p.ValorPrato
FROM Ocupacoes o
JOIN PratosConsumidos pc ON o.IDOcupacao = pc.IDOcupacao
JOIN Pratos p ON pc.IDPrato = p.IDPrato;

--  Listar o nome do cliente e o tipo de pagamento de todas as ocupações pagas;
SELECT c.NomeCliente, p.TipoPagamento
FROM Clientes c
JOIN Ocupacoes o ON c.IDCliente = o.IDCliente
JOIN Pagamentos p ON o.IDOcupacao = p.IDOcupacao;

--  Listar o nome do cliente e os produtos utilizados nas massagens dos clientes que ficaram hospedados no último ano;
SELECT c.NomeCliente, mp.NomeProduto
FROM Clientes c
JOIN Massagens m ON c.IDCliente = m.IDCliente
JOIN MassagemProdutos mp ON m.IDMassagem = mp.IDMassagem
WHERE YEAR(m.DataHospedagem) = YEAR(CURRENT_DATE()) - 1;

-- Listar o nome do cliente, a data de nascimento e o andar do quarto em que ficaram hospedados os clientes nos últimos três meses;
SELECT c.NomeCliente, c.DataNascimento, q.Andar
FROM Clientes c
JOIN Reservas r ON c.IDCliente = r.IDCliente
JOIN Quartos q ON r.IDQuarto = q.IDQuarto
WHERE r.DataCheckIn >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH);

-- Listar o estado, o nome da cidade e o nome do cliente, para os clientes que se hospedaram nos últimos cinco anos.
SELECT c.Estado, c.Cidade, c.NomeCliente
FROM Clientes c
JOIN Reservas r ON c.IDCliente = r.IDCliente
WHERE r.DataCheckIn >= DATE_SUB(CURRENT_DATE(), INTERVAL 5 YEAR);

-- Listar o nome do cliente, a data prevista para entrada (reservada), a data e saída da hospedagem(ocupação), o andar e o número do quarto de todos os clientes que se hospedaram no hotel no anocorrente.
SELECT c.NomeCliente, r.DataCheckIn, r.DataCheckOut, q.Andar, q.NumeroQuarto
FROM Clientes c
JOIN Reservas r ON c.IDCliente = r.IDCliente
JOIN Quartos q ON r.IDQuarto = q.IDQuarto
WHERE YEAR(r.DataCheckIn) = YEAR(CURRENT_DATE());
